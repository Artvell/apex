# Generated by Django 2.2 on 2019-05-01 05:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dop_types',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название прочего расхода')),
                ('min_summ', models.IntegerField(verbose_name='Минимальная сумма')),
                ('max_summ', models.IntegerField(verbose_name='Максимальная сумма')),
            ],
            options={
                'verbose_name': 'Тип дополнительных расходов',
                'verbose_name_plural': 'Типы дополнительных расходов',
            },
        ),
        migrations.CreateModel(
            name='Money',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nak_id', models.CharField(max_length=37, verbose_name='№ накладной')),
                ('dat', models.DateField(auto_now=True, verbose_name='Дата накладной')),
                ('nsumma', models.IntegerField(verbose_name='Требуемая сумма для закупки')),
                ('dsumma', models.IntegerField(verbose_name='Выданная сумма')),
                ('isumma', models.IntegerField(verbose_name='Истраченная сумма')),
                ('psumma', models.IntegerField(verbose_name='Прочие расходы')),
                ('rsumma', models.IntegerField(verbose_name='Итого расход')),
                ('vsumma', models.IntegerField(verbose_name='Сумма возврата/выдачи')),
                ('is_calculated', models.BooleanField(verbose_name='Расчет произведен?')),
            ],
            options={
                'verbose_name': 'Деньги для закупки',
                'verbose_name_plural': 'Деньги для закупки',
            },
        ),
        migrations.CreateModel(
            name='Pizzerias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название пиццерии')),
            ],
            options={
                'verbose_name': 'Пиццерия',
                'verbose_name_plural': 'Пиццерии',
            },
            managers=[
                ('pr', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Postavsh',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firm_name', models.CharField(default='', max_length=50, verbose_name='Фирма-поставщик')),
                ('name', models.CharField(default='', max_length=20, verbose_name='Контактное лицо')),
                ('contact', models.CharField(default='', max_length=50, verbose_name='Контактные данные')),
                ('place', models.TextField(default='', verbose_name='Расположение')),
            ],
            options={
                'verbose_name': 'Поставщик',
                'verbose_name_plural': 'Поставщики',
            },
            managers=[
                ('pos1', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artikul', models.CharField(default='', editable=False, max_length=6, verbose_name='Артикул')),
                ('name', models.CharField(max_length=100, verbose_name='Название товара')),
                ('image', models.ImageField(upload_to='', verbose_name='Изображение')),
                ('rashod', models.FloatField(default=1, verbose_name='Ср.расход в день')),
                ('scena', models.FloatField(default=1, verbose_name='Ср.цена')),
                ('maks_zakup', models.IntegerField(default=1, verbose_name='Закупка на дни')),
                ('min_zakup', models.IntegerField(default=1, verbose_name='Миним.дни для закупки')),
                ('prigot', models.BooleanField(verbose_name='Приготавливаемый товар?')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='Receivers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver', models.CharField(max_length=100, verbose_name='Объект списания')),
            ],
            options={
                'verbose_name': 'Отгрузка',
                'verbose_name_plural': 'Отгрузка',
            },
        ),
        migrations.CreateModel(
            name='Units',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edizm', models.CharField(max_length=20, verbose_name='Обозначение')),
                ('opis', models.CharField(max_length=50, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Единица измерения',
                'verbose_name_plural': 'Единицы измерения',
            },
            managers=[
                ('unit', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kolvo', models.FloatField(verbose_name='Кол-во')),
                ('summ', models.FloatField(default=0.0, verbose_name='Сумма')),
                ('ostat', models.FloatField(default=0.0, editable=False, verbose_name='Осталось на складе')),
                ('name', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='roles.Products', verbose_name='Товар')),
            ],
            options={
                'verbose_name': ' На склад',
                'verbose_name_plural': 'Склад',
            },
        ),
        migrations.CreateModel(
            name='Spis',
            fields=[
                ('nak_id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID накладной')),
                ('product', models.CharField(max_length=100, verbose_name='Что')),
                ('kol', models.IntegerField(verbose_name='Сколько')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='roles.Receivers', verbose_name='Кому')),
            ],
            options={
                'verbose_name': 'Накладная на списание',
                'verbose_name_plural': 'Накладные на списание',
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.IntegerField(blank=True, choices=[(1, 'Завсклад'), (2, 'Кассир'), (3, 'Закупщик'), (4, 'Заготовщик'), (5, 'Пиццемейкер'), (6, 'Пиццедоставщик'), (7, 'Пиццекассир')], null=True, verbose_name='Роль')),
                ('place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='roles.Pizzerias', verbose_name='Пиццерия')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Работник')),
            ],
            options={
                'verbose_name': 'Роль',
                'verbose_name_plural': 'Роли',
            },
            managers=[
                ('profile', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nak_id', models.CharField(max_length=50, verbose_name='Номер накладной')),
                ('last_cost', models.FloatField(verbose_name='Последняя цена')),
                ('kolvo', models.FloatField(verbose_name='Требуемое кол-во')),
                ('min_srok', models.IntegerField(verbose_name='Мин.срок годности')),
                ('is_accepted', models.BooleanField(verbose_name='Накладная принята?')),
                ('purchased_kol', models.FloatField(verbose_name='Купленное кол-во')),
                ('new_cost', models.FloatField(verbose_name='Цена')),
                ('summ', models.FloatField(default=0.0, verbose_name='Сумма')),
                ('fact_kol', models.FloatField(verbose_name='Фактическое кол-во')),
                ('srok', models.DateField(null=True, verbose_name='Срок годности')),
                ('shtrih', models.IntegerField(verbose_name='Штрих-код')),
                ('is_delivered', models.BooleanField(verbose_name='Поступил на склад?')),
                ('name', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='roles.Products', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Накладная для закупки',
                'verbose_name_plural': 'Накладная для закупки',
            },
            managers=[
                ('pur', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='products',
            name='edizm',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='roles.Units', verbose_name='Ед.измерения'),
        ),
        migrations.CreateModel(
            name='Nakl_for_zagot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tkolvo', models.FloatField(verbose_name='Требуемое количество')),
                ('is_accepted', models.BooleanField(verbose_name='Накладная принята?')),
                ('pkolvo', models.FloatField(verbose_name='Приготовленное количество')),
                ('price', models.FloatField(verbose_name='Цена')),
                ('summ', models.FloatField(default=0.0, verbose_name='Сумма')),
                ('is_maked', models.BooleanField(verbose_name='Товар приготовлен?')),
                ('ac_kolvo', models.FloatField(verbose_name='Принятое количество')),
                ('srok', models.DateField(verbose_name='Срок годности')),
                ('shtrih', models.IntegerField(verbose_name='Штрих-код')),
                ('in_stock', models.BooleanField(verbose_name='Поступил на склад?')),
                ('name', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='roles.Products', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Накладная для заготовщика',
                'verbose_name_plural': 'Накладные для заготовщика',
            },
        ),
        migrations.CreateModel(
            name='Ingredients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kolvo', models.IntegerField(verbose_name='Кол-во на 1 удиницу товара')),
                ('ingr', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ingr', to='roles.Products', verbose_name='Ингридиент')),
                ('product', models.ForeignKey(limit_choices_to={'prigot': True}, on_delete=django.db.models.deletion.PROTECT, related_name='product', to='roles.Products', verbose_name='Заготовляемый товар')),
            ],
            options={
                'verbose_name': 'Ингридиент для приготовляемых товаров',
                'verbose_name_plural': 'Ингридиенты для приготовляемых товаров',
            },
        ),
        migrations.CreateModel(
            name='Dop_money',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money', models.IntegerField(verbose_name='Сумма')),
                ('dop_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='roles.Dop_types', verbose_name='Тип расхода')),
                ('nak_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='roles.Purchase', verbose_name='Номер накладной')),
            ],
            options={
                'verbose_name': 'Дополнительные расходы',
                'verbose_name_plural': 'Дополнительные расходы',
            },
        ),
        migrations.CreateModel(
            name='Codes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shtrih', models.CharField(default='', editable=False, max_length=50, verbose_name='Штрих-код')),
                ('name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='roles.Products', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Штрих код',
                'verbose_name_plural': 'Штрих коды',
            },
        ),
    ]
